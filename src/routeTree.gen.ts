/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyEmailImport } from './routes/verify-email'
import { Route as UserImport } from './routes/user'
import { Route as TermsImport } from './routes/terms'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as ContactImport } from './routes/contact'
import { Route as CartImport } from './routes/cart'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as BlogsIndexImport } from './routes/blogs.index'
import { Route as PaymentSuccessImport } from './routes/payment.success'
import { Route as PaymentCheckoutImport } from './routes/payment.checkout'
import { Route as LoginForgotpasswordImport } from './routes/login/forgotpassword'
import { Route as UserSettingIndexImport } from './routes/user.setting.index'
import { Route as UserPurchasesIndexImport } from './routes/user.purchases.index'
import { Route as UserProfileIndexImport } from './routes/user.profile.index'
import { Route as CourseCourseSlugIndexImport } from './routes/course.$courseSlug.index'
import { Route as BlogsSlugIndexImport } from './routes/blogs.$slug.index'
import { Route as CoursesSearchSearchIndexImport } from './routes/courses.search.$search.index'
import { Route as CoursesCategoryCategorySlugIndexImport } from './routes/courses.category.$categorySlug.index'
import { Route as CourseCourseSlugLearnIndexImport } from './routes/course.$courseSlug.learn.index'
import { Route as CourseCourseSlugLearnSectionIdLectureImport } from './routes/course.$courseSlug.learn.$sectionId.lecture'
import { Route as CourseCourseSlugLearnSectionIdQuizQuizIdImport } from './routes/course.$courseSlug.learn.$sectionId.quiz.$quizId'
import { Route as CourseCourseSlugLearnSectionIdLectureLectureIdIndexImport } from './routes/course.$courseSlug.learn.$sectionId.lecture.$lectureId.index'

// Create/Update Routes

const VerifyEmailRoute = VerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const UserRoute = UserImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const TermsRoute = TermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const BlogsIndexRoute = BlogsIndexImport.update({
  id: '/blogs/',
  path: '/blogs/',
  getParentRoute: () => rootRoute,
} as any)

const PaymentSuccessRoute = PaymentSuccessImport.update({
  id: '/payment/success',
  path: '/payment/success',
  getParentRoute: () => rootRoute,
} as any)

const PaymentCheckoutRoute = PaymentCheckoutImport.update({
  id: '/payment/checkout',
  path: '/payment/checkout',
  getParentRoute: () => rootRoute,
} as any)

const LoginForgotpasswordRoute = LoginForgotpasswordImport.update({
  id: '/login/forgotpassword',
  path: '/login/forgotpassword',
  getParentRoute: () => rootRoute,
} as any)

const UserSettingIndexRoute = UserSettingIndexImport.update({
  id: '/setting/',
  path: '/setting/',
  getParentRoute: () => UserRoute,
} as any)

const UserPurchasesIndexRoute = UserPurchasesIndexImport.update({
  id: '/purchases/',
  path: '/purchases/',
  getParentRoute: () => UserRoute,
} as any)

const UserProfileIndexRoute = UserProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => UserRoute,
} as any)

const CourseCourseSlugIndexRoute = CourseCourseSlugIndexImport.update({
  id: '/course/$courseSlug/',
  path: '/course/$courseSlug/',
  getParentRoute: () => rootRoute,
} as any)

const BlogsSlugIndexRoute = BlogsSlugIndexImport.update({
  id: '/blogs/$slug/',
  path: '/blogs/$slug/',
  getParentRoute: () => rootRoute,
} as any)

const CoursesSearchSearchIndexRoute = CoursesSearchSearchIndexImport.update({
  id: '/courses/search/$search/',
  path: '/courses/search/$search/',
  getParentRoute: () => rootRoute,
} as any)

const CoursesCategoryCategorySlugIndexRoute =
  CoursesCategoryCategorySlugIndexImport.update({
    id: '/courses/category/$categorySlug/',
    path: '/courses/category/$categorySlug/',
    getParentRoute: () => rootRoute,
  } as any)

const CourseCourseSlugLearnIndexRoute = CourseCourseSlugLearnIndexImport.update(
  {
    id: '/course/$courseSlug/learn/',
    path: '/course/$courseSlug/learn/',
    getParentRoute: () => rootRoute,
  } as any,
)

const CourseCourseSlugLearnSectionIdLectureRoute =
  CourseCourseSlugLearnSectionIdLectureImport.update({
    id: '/course/$courseSlug/learn/$sectionId/lecture',
    path: '/course/$courseSlug/learn/$sectionId/lecture',
    getParentRoute: () => rootRoute,
  } as any)

const CourseCourseSlugLearnSectionIdQuizQuizIdRoute =
  CourseCourseSlugLearnSectionIdQuizQuizIdImport.update({
    id: '/course/$courseSlug/learn/$sectionId/quiz/$quizId',
    path: '/course/$courseSlug/learn/$sectionId/quiz/$quizId',
    getParentRoute: () => rootRoute,
  } as any)

const CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute =
  CourseCourseSlugLearnSectionIdLectureLectureIdIndexImport.update({
    id: '/$lectureId/',
    path: '/$lectureId/',
    getParentRoute: () => CourseCourseSlugLearnSectionIdLectureRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/login/forgotpassword': {
      id: '/login/forgotpassword'
      path: '/login/forgotpassword'
      fullPath: '/login/forgotpassword'
      preLoaderRoute: typeof LoginForgotpasswordImport
      parentRoute: typeof rootRoute
    }
    '/payment/checkout': {
      id: '/payment/checkout'
      path: '/payment/checkout'
      fullPath: '/payment/checkout'
      preLoaderRoute: typeof PaymentCheckoutImport
      parentRoute: typeof rootRoute
    }
    '/payment/success': {
      id: '/payment/success'
      path: '/payment/success'
      fullPath: '/payment/success'
      preLoaderRoute: typeof PaymentSuccessImport
      parentRoute: typeof rootRoute
    }
    '/blogs/': {
      id: '/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof BlogsIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/blogs/$slug/': {
      id: '/blogs/$slug/'
      path: '/blogs/$slug'
      fullPath: '/blogs/$slug'
      preLoaderRoute: typeof BlogsSlugIndexImport
      parentRoute: typeof rootRoute
    }
    '/course/$courseSlug/': {
      id: '/course/$courseSlug/'
      path: '/course/$courseSlug'
      fullPath: '/course/$courseSlug'
      preLoaderRoute: typeof CourseCourseSlugIndexImport
      parentRoute: typeof rootRoute
    }
    '/user/profile/': {
      id: '/user/profile/'
      path: '/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileIndexImport
      parentRoute: typeof UserImport
    }
    '/user/purchases/': {
      id: '/user/purchases/'
      path: '/purchases'
      fullPath: '/user/purchases'
      preLoaderRoute: typeof UserPurchasesIndexImport
      parentRoute: typeof UserImport
    }
    '/user/setting/': {
      id: '/user/setting/'
      path: '/setting'
      fullPath: '/user/setting'
      preLoaderRoute: typeof UserSettingIndexImport
      parentRoute: typeof UserImport
    }
    '/course/$courseSlug/learn/': {
      id: '/course/$courseSlug/learn/'
      path: '/course/$courseSlug/learn'
      fullPath: '/course/$courseSlug/learn'
      preLoaderRoute: typeof CourseCourseSlugLearnIndexImport
      parentRoute: typeof rootRoute
    }
    '/courses/category/$categorySlug/': {
      id: '/courses/category/$categorySlug/'
      path: '/courses/category/$categorySlug'
      fullPath: '/courses/category/$categorySlug'
      preLoaderRoute: typeof CoursesCategoryCategorySlugIndexImport
      parentRoute: typeof rootRoute
    }
    '/courses/search/$search/': {
      id: '/courses/search/$search/'
      path: '/courses/search/$search'
      fullPath: '/courses/search/$search'
      preLoaderRoute: typeof CoursesSearchSearchIndexImport
      parentRoute: typeof rootRoute
    }
    '/course/$courseSlug/learn/$sectionId/lecture': {
      id: '/course/$courseSlug/learn/$sectionId/lecture'
      path: '/course/$courseSlug/learn/$sectionId/lecture'
      fullPath: '/course/$courseSlug/learn/$sectionId/lecture'
      preLoaderRoute: typeof CourseCourseSlugLearnSectionIdLectureImport
      parentRoute: typeof rootRoute
    }
    '/course/$courseSlug/learn/$sectionId/quiz/$quizId': {
      id: '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
      path: '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
      fullPath: '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
      preLoaderRoute: typeof CourseCourseSlugLearnSectionIdQuizQuizIdImport
      parentRoute: typeof rootRoute
    }
    '/course/$courseSlug/learn/$sectionId/lecture/$lectureId/': {
      id: '/course/$courseSlug/learn/$sectionId/lecture/$lectureId/'
      path: '/$lectureId'
      fullPath: '/course/$courseSlug/learn/$sectionId/lecture/$lectureId'
      preLoaderRoute: typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexImport
      parentRoute: typeof CourseCourseSlugLearnSectionIdLectureImport
    }
  }
}

// Create and export the route tree

interface UserRouteChildren {
  UserProfileIndexRoute: typeof UserProfileIndexRoute
  UserPurchasesIndexRoute: typeof UserPurchasesIndexRoute
  UserSettingIndexRoute: typeof UserSettingIndexRoute
}

const UserRouteChildren: UserRouteChildren = {
  UserProfileIndexRoute: UserProfileIndexRoute,
  UserPurchasesIndexRoute: UserPurchasesIndexRoute,
  UserSettingIndexRoute: UserSettingIndexRoute,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

interface CourseCourseSlugLearnSectionIdLectureRouteChildren {
  CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute: typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute
}

const CourseCourseSlugLearnSectionIdLectureRouteChildren: CourseCourseSlugLearnSectionIdLectureRouteChildren =
  {
    CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute:
      CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute,
  }

const CourseCourseSlugLearnSectionIdLectureRouteWithChildren =
  CourseCourseSlugLearnSectionIdLectureRoute._addFileChildren(
    CourseCourseSlugLearnSectionIdLectureRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/user': typeof UserRouteWithChildren
  '/verify-email': typeof VerifyEmailRoute
  '/login/forgotpassword': typeof LoginForgotpasswordRoute
  '/payment/checkout': typeof PaymentCheckoutRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/blogs': typeof BlogsIndexRoute
  '/login': typeof LoginIndexRoute
  '/blogs/$slug': typeof BlogsSlugIndexRoute
  '/course/$courseSlug': typeof CourseCourseSlugIndexRoute
  '/user/profile': typeof UserProfileIndexRoute
  '/user/purchases': typeof UserPurchasesIndexRoute
  '/user/setting': typeof UserSettingIndexRoute
  '/course/$courseSlug/learn': typeof CourseCourseSlugLearnIndexRoute
  '/courses/category/$categorySlug': typeof CoursesCategoryCategorySlugIndexRoute
  '/courses/search/$search': typeof CoursesSearchSearchIndexRoute
  '/course/$courseSlug/learn/$sectionId/lecture': typeof CourseCourseSlugLearnSectionIdLectureRouteWithChildren
  '/course/$courseSlug/learn/$sectionId/quiz/$quizId': typeof CourseCourseSlugLearnSectionIdQuizQuizIdRoute
  '/course/$courseSlug/learn/$sectionId/lecture/$lectureId': typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/user': typeof UserRouteWithChildren
  '/verify-email': typeof VerifyEmailRoute
  '/login/forgotpassword': typeof LoginForgotpasswordRoute
  '/payment/checkout': typeof PaymentCheckoutRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/blogs': typeof BlogsIndexRoute
  '/login': typeof LoginIndexRoute
  '/blogs/$slug': typeof BlogsSlugIndexRoute
  '/course/$courseSlug': typeof CourseCourseSlugIndexRoute
  '/user/profile': typeof UserProfileIndexRoute
  '/user/purchases': typeof UserPurchasesIndexRoute
  '/user/setting': typeof UserSettingIndexRoute
  '/course/$courseSlug/learn': typeof CourseCourseSlugLearnIndexRoute
  '/courses/category/$categorySlug': typeof CoursesCategoryCategorySlugIndexRoute
  '/courses/search/$search': typeof CoursesSearchSearchIndexRoute
  '/course/$courseSlug/learn/$sectionId/lecture': typeof CourseCourseSlugLearnSectionIdLectureRouteWithChildren
  '/course/$courseSlug/learn/$sectionId/quiz/$quizId': typeof CourseCourseSlugLearnSectionIdQuizQuizIdRoute
  '/course/$courseSlug/learn/$sectionId/lecture/$lectureId': typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/user': typeof UserRouteWithChildren
  '/verify-email': typeof VerifyEmailRoute
  '/login/forgotpassword': typeof LoginForgotpasswordRoute
  '/payment/checkout': typeof PaymentCheckoutRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/blogs/': typeof BlogsIndexRoute
  '/login/': typeof LoginIndexRoute
  '/blogs/$slug/': typeof BlogsSlugIndexRoute
  '/course/$courseSlug/': typeof CourseCourseSlugIndexRoute
  '/user/profile/': typeof UserProfileIndexRoute
  '/user/purchases/': typeof UserPurchasesIndexRoute
  '/user/setting/': typeof UserSettingIndexRoute
  '/course/$courseSlug/learn/': typeof CourseCourseSlugLearnIndexRoute
  '/courses/category/$categorySlug/': typeof CoursesCategoryCategorySlugIndexRoute
  '/courses/search/$search/': typeof CoursesSearchSearchIndexRoute
  '/course/$courseSlug/learn/$sectionId/lecture': typeof CourseCourseSlugLearnSectionIdLectureRouteWithChildren
  '/course/$courseSlug/learn/$sectionId/quiz/$quizId': typeof CourseCourseSlugLearnSectionIdQuizQuizIdRoute
  '/course/$courseSlug/learn/$sectionId/lecture/$lectureId/': typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cart'
    | '/contact'
    | '/privacy'
    | '/reset-password'
    | '/signup'
    | '/terms'
    | '/user'
    | '/verify-email'
    | '/login/forgotpassword'
    | '/payment/checkout'
    | '/payment/success'
    | '/blogs'
    | '/login'
    | '/blogs/$slug'
    | '/course/$courseSlug'
    | '/user/profile'
    | '/user/purchases'
    | '/user/setting'
    | '/course/$courseSlug/learn'
    | '/courses/category/$categorySlug'
    | '/courses/search/$search'
    | '/course/$courseSlug/learn/$sectionId/lecture'
    | '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
    | '/course/$courseSlug/learn/$sectionId/lecture/$lectureId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cart'
    | '/contact'
    | '/privacy'
    | '/reset-password'
    | '/signup'
    | '/terms'
    | '/user'
    | '/verify-email'
    | '/login/forgotpassword'
    | '/payment/checkout'
    | '/payment/success'
    | '/blogs'
    | '/login'
    | '/blogs/$slug'
    | '/course/$courseSlug'
    | '/user/profile'
    | '/user/purchases'
    | '/user/setting'
    | '/course/$courseSlug/learn'
    | '/courses/category/$categorySlug'
    | '/courses/search/$search'
    | '/course/$courseSlug/learn/$sectionId/lecture'
    | '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
    | '/course/$courseSlug/learn/$sectionId/lecture/$lectureId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cart'
    | '/contact'
    | '/privacy'
    | '/reset-password'
    | '/signup'
    | '/terms'
    | '/user'
    | '/verify-email'
    | '/login/forgotpassword'
    | '/payment/checkout'
    | '/payment/success'
    | '/blogs/'
    | '/login/'
    | '/blogs/$slug/'
    | '/course/$courseSlug/'
    | '/user/profile/'
    | '/user/purchases/'
    | '/user/setting/'
    | '/course/$courseSlug/learn/'
    | '/courses/category/$categorySlug/'
    | '/courses/search/$search/'
    | '/course/$courseSlug/learn/$sectionId/lecture'
    | '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
    | '/course/$courseSlug/learn/$sectionId/lecture/$lectureId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CartRoute: typeof CartRoute
  ContactRoute: typeof ContactRoute
  PrivacyRoute: typeof PrivacyRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  TermsRoute: typeof TermsRoute
  UserRoute: typeof UserRouteWithChildren
  VerifyEmailRoute: typeof VerifyEmailRoute
  LoginForgotpasswordRoute: typeof LoginForgotpasswordRoute
  PaymentCheckoutRoute: typeof PaymentCheckoutRoute
  PaymentSuccessRoute: typeof PaymentSuccessRoute
  BlogsIndexRoute: typeof BlogsIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  BlogsSlugIndexRoute: typeof BlogsSlugIndexRoute
  CourseCourseSlugIndexRoute: typeof CourseCourseSlugIndexRoute
  CourseCourseSlugLearnIndexRoute: typeof CourseCourseSlugLearnIndexRoute
  CoursesCategoryCategorySlugIndexRoute: typeof CoursesCategoryCategorySlugIndexRoute
  CoursesSearchSearchIndexRoute: typeof CoursesSearchSearchIndexRoute
  CourseCourseSlugLearnSectionIdLectureRoute: typeof CourseCourseSlugLearnSectionIdLectureRouteWithChildren
  CourseCourseSlugLearnSectionIdQuizQuizIdRoute: typeof CourseCourseSlugLearnSectionIdQuizQuizIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CartRoute: CartRoute,
  ContactRoute: ContactRoute,
  PrivacyRoute: PrivacyRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  TermsRoute: TermsRoute,
  UserRoute: UserRouteWithChildren,
  VerifyEmailRoute: VerifyEmailRoute,
  LoginForgotpasswordRoute: LoginForgotpasswordRoute,
  PaymentCheckoutRoute: PaymentCheckoutRoute,
  PaymentSuccessRoute: PaymentSuccessRoute,
  BlogsIndexRoute: BlogsIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  BlogsSlugIndexRoute: BlogsSlugIndexRoute,
  CourseCourseSlugIndexRoute: CourseCourseSlugIndexRoute,
  CourseCourseSlugLearnIndexRoute: CourseCourseSlugLearnIndexRoute,
  CoursesCategoryCategorySlugIndexRoute: CoursesCategoryCategorySlugIndexRoute,
  CoursesSearchSearchIndexRoute: CoursesSearchSearchIndexRoute,
  CourseCourseSlugLearnSectionIdLectureRoute:
    CourseCourseSlugLearnSectionIdLectureRouteWithChildren,
  CourseCourseSlugLearnSectionIdQuizQuizIdRoute:
    CourseCourseSlugLearnSectionIdQuizQuizIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/cart",
        "/contact",
        "/privacy",
        "/reset-password",
        "/signup",
        "/terms",
        "/user",
        "/verify-email",
        "/login/forgotpassword",
        "/payment/checkout",
        "/payment/success",
        "/blogs/",
        "/login/",
        "/blogs/$slug/",
        "/course/$courseSlug/",
        "/course/$courseSlug/learn/",
        "/courses/category/$categorySlug/",
        "/courses/search/$search/",
        "/course/$courseSlug/learn/$sectionId/lecture",
        "/course/$courseSlug/learn/$sectionId/quiz/$quizId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/privacy": {
      "filePath": "privacy.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/terms": {
      "filePath": "terms.tsx"
    },
    "/user": {
      "filePath": "user.tsx",
      "children": [
        "/user/profile/",
        "/user/purchases/",
        "/user/setting/"
      ]
    },
    "/verify-email": {
      "filePath": "verify-email.tsx"
    },
    "/login/forgotpassword": {
      "filePath": "login/forgotpassword.tsx"
    },
    "/payment/checkout": {
      "filePath": "payment.checkout.tsx"
    },
    "/payment/success": {
      "filePath": "payment.success.tsx"
    },
    "/blogs/": {
      "filePath": "blogs.index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/blogs/$slug/": {
      "filePath": "blogs.$slug.index.tsx"
    },
    "/course/$courseSlug/": {
      "filePath": "course.$courseSlug.index.tsx"
    },
    "/user/profile/": {
      "filePath": "user.profile.index.tsx",
      "parent": "/user"
    },
    "/user/purchases/": {
      "filePath": "user.purchases.index.tsx",
      "parent": "/user"
    },
    "/user/setting/": {
      "filePath": "user.setting.index.tsx",
      "parent": "/user"
    },
    "/course/$courseSlug/learn/": {
      "filePath": "course.$courseSlug.learn.index.tsx"
    },
    "/courses/category/$categorySlug/": {
      "filePath": "courses.category.$categorySlug.index.tsx"
    },
    "/courses/search/$search/": {
      "filePath": "courses.search.$search.index.tsx"
    },
    "/course/$courseSlug/learn/$sectionId/lecture": {
      "filePath": "course.$courseSlug.learn.$sectionId.lecture.tsx",
      "children": [
        "/course/$courseSlug/learn/$sectionId/lecture/$lectureId/"
      ]
    },
    "/course/$courseSlug/learn/$sectionId/quiz/$quizId": {
      "filePath": "course.$courseSlug.learn.$sectionId.quiz.$quizId.tsx"
    },
    "/course/$courseSlug/learn/$sectionId/lecture/$lectureId/": {
      "filePath": "course.$courseSlug.learn.$sectionId.lecture.$lectureId.index.tsx",
      "parent": "/course/$courseSlug/learn/$sectionId/lecture"
    }
  }
}
ROUTE_MANIFEST_END */
