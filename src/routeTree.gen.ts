/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyEmailRouteImport } from './routes/verify-email'
import { Route as UserRouteImport } from './routes/user'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as CartRouteImport } from './routes/cart'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as BlogsIndexRouteImport } from './routes/blogs.index'
import { Route as PaymentSuccessRouteImport } from './routes/payment.success'
import { Route as PaymentCheckoutRouteImport } from './routes/payment.checkout'
import { Route as LoginForgotpasswordRouteImport } from './routes/login/forgotpassword'
import { Route as UserSettingIndexRouteImport } from './routes/user.setting.index'
import { Route as UserPurchasesIndexRouteImport } from './routes/user.purchases.index'
import { Route as UserProfileIndexRouteImport } from './routes/user.profile.index'
import { Route as CourseCourseSlugIndexRouteImport } from './routes/course.$courseSlug.index'
import { Route as BlogsSlugIndexRouteImport } from './routes/blogs.$slug.index'
import { Route as CoursesSearchSearchIndexRouteImport } from './routes/courses.search.$search.index'
import { Route as CoursesCategoryCategorySlugIndexRouteImport } from './routes/courses.category.$categorySlug.index'
import { Route as CourseCourseSlugLearnIndexRouteImport } from './routes/course.$courseSlug.learn.index'
import { Route as CourseCourseSlugLearnSectionIdLectureRouteImport } from './routes/course.$courseSlug.learn.$sectionId.lecture'
import { Route as CourseCourseSlugLearnSectionIdQuizQuizIdRouteImport } from './routes/course.$courseSlug.learn.$sectionId.quiz.$quizId'
import { Route as CourseCourseSlugLearnSectionIdLectureLectureIdIndexRouteImport } from './routes/course.$courseSlug.learn.$sectionId.lecture.$lectureId.index'

const VerifyEmailRoute = VerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const UserRoute = UserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const CartRoute = CartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogsIndexRoute = BlogsIndexRouteImport.update({
  id: '/blogs/',
  path: '/blogs/',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentSuccessRoute = PaymentSuccessRouteImport.update({
  id: '/payment/success',
  path: '/payment/success',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentCheckoutRoute = PaymentCheckoutRouteImport.update({
  id: '/payment/checkout',
  path: '/payment/checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginForgotpasswordRoute = LoginForgotpasswordRouteImport.update({
  id: '/login/forgotpassword',
  path: '/login/forgotpassword',
  getParentRoute: () => rootRouteImport,
} as any)
const UserSettingIndexRoute = UserSettingIndexRouteImport.update({
  id: '/setting/',
  path: '/setting/',
  getParentRoute: () => UserRoute,
} as any)
const UserPurchasesIndexRoute = UserPurchasesIndexRouteImport.update({
  id: '/purchases/',
  path: '/purchases/',
  getParentRoute: () => UserRoute,
} as any)
const UserProfileIndexRoute = UserProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => UserRoute,
} as any)
const CourseCourseSlugIndexRoute = CourseCourseSlugIndexRouteImport.update({
  id: '/course/$courseSlug/',
  path: '/course/$courseSlug/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogsSlugIndexRoute = BlogsSlugIndexRouteImport.update({
  id: '/blogs/$slug/',
  path: '/blogs/$slug/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesSearchSearchIndexRoute =
  CoursesSearchSearchIndexRouteImport.update({
    id: '/courses/search/$search/',
    path: '/courses/search/$search/',
    getParentRoute: () => rootRouteImport,
  } as any)
const CoursesCategoryCategorySlugIndexRoute =
  CoursesCategoryCategorySlugIndexRouteImport.update({
    id: '/courses/category/$categorySlug/',
    path: '/courses/category/$categorySlug/',
    getParentRoute: () => rootRouteImport,
  } as any)
const CourseCourseSlugLearnIndexRoute =
  CourseCourseSlugLearnIndexRouteImport.update({
    id: '/course/$courseSlug/learn/',
    path: '/course/$courseSlug/learn/',
    getParentRoute: () => rootRouteImport,
  } as any)
const CourseCourseSlugLearnSectionIdLectureRoute =
  CourseCourseSlugLearnSectionIdLectureRouteImport.update({
    id: '/course/$courseSlug/learn/$sectionId/lecture',
    path: '/course/$courseSlug/learn/$sectionId/lecture',
    getParentRoute: () => rootRouteImport,
  } as any)
const CourseCourseSlugLearnSectionIdQuizQuizIdRoute =
  CourseCourseSlugLearnSectionIdQuizQuizIdRouteImport.update({
    id: '/course/$courseSlug/learn/$sectionId/quiz/$quizId',
    path: '/course/$courseSlug/learn/$sectionId/quiz/$quizId',
    getParentRoute: () => rootRouteImport,
  } as any)
const CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute =
  CourseCourseSlugLearnSectionIdLectureLectureIdIndexRouteImport.update({
    id: '/$lectureId/',
    path: '/$lectureId/',
    getParentRoute: () => CourseCourseSlugLearnSectionIdLectureRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/user': typeof UserRouteWithChildren
  '/verify-email': typeof VerifyEmailRoute
  '/login/forgotpassword': typeof LoginForgotpasswordRoute
  '/payment/checkout': typeof PaymentCheckoutRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/blogs': typeof BlogsIndexRoute
  '/login': typeof LoginIndexRoute
  '/blogs/$slug': typeof BlogsSlugIndexRoute
  '/course/$courseSlug': typeof CourseCourseSlugIndexRoute
  '/user/profile': typeof UserProfileIndexRoute
  '/user/purchases': typeof UserPurchasesIndexRoute
  '/user/setting': typeof UserSettingIndexRoute
  '/course/$courseSlug/learn': typeof CourseCourseSlugLearnIndexRoute
  '/courses/category/$categorySlug': typeof CoursesCategoryCategorySlugIndexRoute
  '/courses/search/$search': typeof CoursesSearchSearchIndexRoute
  '/course/$courseSlug/learn/$sectionId/lecture': typeof CourseCourseSlugLearnSectionIdLectureRouteWithChildren
  '/course/$courseSlug/learn/$sectionId/quiz/$quizId': typeof CourseCourseSlugLearnSectionIdQuizQuizIdRoute
  '/course/$courseSlug/learn/$sectionId/lecture/$lectureId': typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/user': typeof UserRouteWithChildren
  '/verify-email': typeof VerifyEmailRoute
  '/login/forgotpassword': typeof LoginForgotpasswordRoute
  '/payment/checkout': typeof PaymentCheckoutRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/blogs': typeof BlogsIndexRoute
  '/login': typeof LoginIndexRoute
  '/blogs/$slug': typeof BlogsSlugIndexRoute
  '/course/$courseSlug': typeof CourseCourseSlugIndexRoute
  '/user/profile': typeof UserProfileIndexRoute
  '/user/purchases': typeof UserPurchasesIndexRoute
  '/user/setting': typeof UserSettingIndexRoute
  '/course/$courseSlug/learn': typeof CourseCourseSlugLearnIndexRoute
  '/courses/category/$categorySlug': typeof CoursesCategoryCategorySlugIndexRoute
  '/courses/search/$search': typeof CoursesSearchSearchIndexRoute
  '/course/$courseSlug/learn/$sectionId/lecture': typeof CourseCourseSlugLearnSectionIdLectureRouteWithChildren
  '/course/$courseSlug/learn/$sectionId/quiz/$quizId': typeof CourseCourseSlugLearnSectionIdQuizQuizIdRoute
  '/course/$courseSlug/learn/$sectionId/lecture/$lectureId': typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/terms': typeof TermsRoute
  '/user': typeof UserRouteWithChildren
  '/verify-email': typeof VerifyEmailRoute
  '/login/forgotpassword': typeof LoginForgotpasswordRoute
  '/payment/checkout': typeof PaymentCheckoutRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/blogs/': typeof BlogsIndexRoute
  '/login/': typeof LoginIndexRoute
  '/blogs/$slug/': typeof BlogsSlugIndexRoute
  '/course/$courseSlug/': typeof CourseCourseSlugIndexRoute
  '/user/profile/': typeof UserProfileIndexRoute
  '/user/purchases/': typeof UserPurchasesIndexRoute
  '/user/setting/': typeof UserSettingIndexRoute
  '/course/$courseSlug/learn/': typeof CourseCourseSlugLearnIndexRoute
  '/courses/category/$categorySlug/': typeof CoursesCategoryCategorySlugIndexRoute
  '/courses/search/$search/': typeof CoursesSearchSearchIndexRoute
  '/course/$courseSlug/learn/$sectionId/lecture': typeof CourseCourseSlugLearnSectionIdLectureRouteWithChildren
  '/course/$courseSlug/learn/$sectionId/quiz/$quizId': typeof CourseCourseSlugLearnSectionIdQuizQuizIdRoute
  '/course/$courseSlug/learn/$sectionId/lecture/$lectureId/': typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cart'
    | '/contact'
    | '/privacy'
    | '/reset-password'
    | '/signup'
    | '/terms'
    | '/user'
    | '/verify-email'
    | '/login/forgotpassword'
    | '/payment/checkout'
    | '/payment/success'
    | '/blogs'
    | '/login'
    | '/blogs/$slug'
    | '/course/$courseSlug'
    | '/user/profile'
    | '/user/purchases'
    | '/user/setting'
    | '/course/$courseSlug/learn'
    | '/courses/category/$categorySlug'
    | '/courses/search/$search'
    | '/course/$courseSlug/learn/$sectionId/lecture'
    | '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
    | '/course/$courseSlug/learn/$sectionId/lecture/$lectureId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cart'
    | '/contact'
    | '/privacy'
    | '/reset-password'
    | '/signup'
    | '/terms'
    | '/user'
    | '/verify-email'
    | '/login/forgotpassword'
    | '/payment/checkout'
    | '/payment/success'
    | '/blogs'
    | '/login'
    | '/blogs/$slug'
    | '/course/$courseSlug'
    | '/user/profile'
    | '/user/purchases'
    | '/user/setting'
    | '/course/$courseSlug/learn'
    | '/courses/category/$categorySlug'
    | '/courses/search/$search'
    | '/course/$courseSlug/learn/$sectionId/lecture'
    | '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
    | '/course/$courseSlug/learn/$sectionId/lecture/$lectureId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cart'
    | '/contact'
    | '/privacy'
    | '/reset-password'
    | '/signup'
    | '/terms'
    | '/user'
    | '/verify-email'
    | '/login/forgotpassword'
    | '/payment/checkout'
    | '/payment/success'
    | '/blogs/'
    | '/login/'
    | '/blogs/$slug/'
    | '/course/$courseSlug/'
    | '/user/profile/'
    | '/user/purchases/'
    | '/user/setting/'
    | '/course/$courseSlug/learn/'
    | '/courses/category/$categorySlug/'
    | '/courses/search/$search/'
    | '/course/$courseSlug/learn/$sectionId/lecture'
    | '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
    | '/course/$courseSlug/learn/$sectionId/lecture/$lectureId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CartRoute: typeof CartRoute
  ContactRoute: typeof ContactRoute
  PrivacyRoute: typeof PrivacyRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  TermsRoute: typeof TermsRoute
  UserRoute: typeof UserRouteWithChildren
  VerifyEmailRoute: typeof VerifyEmailRoute
  LoginForgotpasswordRoute: typeof LoginForgotpasswordRoute
  PaymentCheckoutRoute: typeof PaymentCheckoutRoute
  PaymentSuccessRoute: typeof PaymentSuccessRoute
  BlogsIndexRoute: typeof BlogsIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  BlogsSlugIndexRoute: typeof BlogsSlugIndexRoute
  CourseCourseSlugIndexRoute: typeof CourseCourseSlugIndexRoute
  CourseCourseSlugLearnIndexRoute: typeof CourseCourseSlugLearnIndexRoute
  CoursesCategoryCategorySlugIndexRoute: typeof CoursesCategoryCategorySlugIndexRoute
  CoursesSearchSearchIndexRoute: typeof CoursesSearchSearchIndexRoute
  CourseCourseSlugLearnSectionIdLectureRoute: typeof CourseCourseSlugLearnSectionIdLectureRouteWithChildren
  CourseCourseSlugLearnSectionIdQuizQuizIdRoute: typeof CourseCourseSlugLearnSectionIdQuizQuizIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blogs/': {
      id: '/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof BlogsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payment/success': {
      id: '/payment/success'
      path: '/payment/success'
      fullPath: '/payment/success'
      preLoaderRoute: typeof PaymentSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payment/checkout': {
      id: '/payment/checkout'
      path: '/payment/checkout'
      fullPath: '/payment/checkout'
      preLoaderRoute: typeof PaymentCheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/forgotpassword': {
      id: '/login/forgotpassword'
      path: '/login/forgotpassword'
      fullPath: '/login/forgotpassword'
      preLoaderRoute: typeof LoginForgotpasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/setting/': {
      id: '/user/setting/'
      path: '/setting'
      fullPath: '/user/setting'
      preLoaderRoute: typeof UserSettingIndexRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/purchases/': {
      id: '/user/purchases/'
      path: '/purchases'
      fullPath: '/user/purchases'
      preLoaderRoute: typeof UserPurchasesIndexRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/profile/': {
      id: '/user/profile/'
      path: '/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileIndexRouteImport
      parentRoute: typeof UserRoute
    }
    '/course/$courseSlug/': {
      id: '/course/$courseSlug/'
      path: '/course/$courseSlug'
      fullPath: '/course/$courseSlug'
      preLoaderRoute: typeof CourseCourseSlugIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blogs/$slug/': {
      id: '/blogs/$slug/'
      path: '/blogs/$slug'
      fullPath: '/blogs/$slug'
      preLoaderRoute: typeof BlogsSlugIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/search/$search/': {
      id: '/courses/search/$search/'
      path: '/courses/search/$search'
      fullPath: '/courses/search/$search'
      preLoaderRoute: typeof CoursesSearchSearchIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/category/$categorySlug/': {
      id: '/courses/category/$categorySlug/'
      path: '/courses/category/$categorySlug'
      fullPath: '/courses/category/$categorySlug'
      preLoaderRoute: typeof CoursesCategoryCategorySlugIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseSlug/learn/': {
      id: '/course/$courseSlug/learn/'
      path: '/course/$courseSlug/learn'
      fullPath: '/course/$courseSlug/learn'
      preLoaderRoute: typeof CourseCourseSlugLearnIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseSlug/learn/$sectionId/lecture': {
      id: '/course/$courseSlug/learn/$sectionId/lecture'
      path: '/course/$courseSlug/learn/$sectionId/lecture'
      fullPath: '/course/$courseSlug/learn/$sectionId/lecture'
      preLoaderRoute: typeof CourseCourseSlugLearnSectionIdLectureRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseSlug/learn/$sectionId/quiz/$quizId': {
      id: '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
      path: '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
      fullPath: '/course/$courseSlug/learn/$sectionId/quiz/$quizId'
      preLoaderRoute: typeof CourseCourseSlugLearnSectionIdQuizQuizIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseSlug/learn/$sectionId/lecture/$lectureId/': {
      id: '/course/$courseSlug/learn/$sectionId/lecture/$lectureId/'
      path: '/$lectureId'
      fullPath: '/course/$courseSlug/learn/$sectionId/lecture/$lectureId'
      preLoaderRoute: typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRouteImport
      parentRoute: typeof CourseCourseSlugLearnSectionIdLectureRoute
    }
  }
}

interface UserRouteChildren {
  UserProfileIndexRoute: typeof UserProfileIndexRoute
  UserPurchasesIndexRoute: typeof UserPurchasesIndexRoute
  UserSettingIndexRoute: typeof UserSettingIndexRoute
}

const UserRouteChildren: UserRouteChildren = {
  UserProfileIndexRoute: UserProfileIndexRoute,
  UserPurchasesIndexRoute: UserPurchasesIndexRoute,
  UserSettingIndexRoute: UserSettingIndexRoute,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

interface CourseCourseSlugLearnSectionIdLectureRouteChildren {
  CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute: typeof CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute
}

const CourseCourseSlugLearnSectionIdLectureRouteChildren: CourseCourseSlugLearnSectionIdLectureRouteChildren =
  {
    CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute:
      CourseCourseSlugLearnSectionIdLectureLectureIdIndexRoute,
  }

const CourseCourseSlugLearnSectionIdLectureRouteWithChildren =
  CourseCourseSlugLearnSectionIdLectureRoute._addFileChildren(
    CourseCourseSlugLearnSectionIdLectureRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CartRoute: CartRoute,
  ContactRoute: ContactRoute,
  PrivacyRoute: PrivacyRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  TermsRoute: TermsRoute,
  UserRoute: UserRouteWithChildren,
  VerifyEmailRoute: VerifyEmailRoute,
  LoginForgotpasswordRoute: LoginForgotpasswordRoute,
  PaymentCheckoutRoute: PaymentCheckoutRoute,
  PaymentSuccessRoute: PaymentSuccessRoute,
  BlogsIndexRoute: BlogsIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  BlogsSlugIndexRoute: BlogsSlugIndexRoute,
  CourseCourseSlugIndexRoute: CourseCourseSlugIndexRoute,
  CourseCourseSlugLearnIndexRoute: CourseCourseSlugLearnIndexRoute,
  CoursesCategoryCategorySlugIndexRoute: CoursesCategoryCategorySlugIndexRoute,
  CoursesSearchSearchIndexRoute: CoursesSearchSearchIndexRoute,
  CourseCourseSlugLearnSectionIdLectureRoute:
    CourseCourseSlugLearnSectionIdLectureRouteWithChildren,
  CourseCourseSlugLearnSectionIdQuizQuizIdRoute:
    CourseCourseSlugLearnSectionIdQuizQuizIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
